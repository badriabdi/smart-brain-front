{"ast":null,"code":"var _jsxFileName = \"/Users/badri/Desktop/smartbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport 'tachyons';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nconst app = new Clarifai.App({\n  apiKey: 'f4e8d9a1fe3b472bace509f189861334'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_col * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonClick = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err)); // there was an error\n    };\n\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonClick: this.onButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      imgUrl: this.state.imgUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/badri/Desktop/smartbrain/src/App.js"],"names":["React","Component","Clarifai","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_col","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","onButtonClick","imgUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport 'tachyons';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\n\n\nconst app = new Clarifai.App({\n apiKey: 'f4e8d9a1fe3b472bace509f189861334'\n});\n\n\nconst particlesOptions = {\n\tparticles: {\n\t\tnumber:{\n\t\t\tvalue:30,\n\t\t\tdensity: {\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 800 \n\t\t\t}\n\t\t}\n\n\t}\n\n}\n\n\n\nclass App extends Component {\n\tconstructor (){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tinput:'',\n\t\t\timgUrl: '',\n      box:{},\n\t\t}\n\t}\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_col * height)\n    }\n    \n\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n\n\n  }\n\n\nonInputChange = (event) => {\n\tthis.setState({input:event.target.value});\n}\n\nonButtonClick = () => {\n   this.setState({imgUrl:this.state.input});\n\n   app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input )\n   .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));\n      // there was an error\n    \n\n  \n\n}\n\n  render(){\n  return (\n    <div className=\"App\">\n\n    <Particles className='particles' \n              params={particlesOptions}\n              \n            />\n\n      <Navigation/>\n\n      <Logo/>\n      <Rank/>\n      <ImageLinkForm onInputChange={this.onInputChange} onButtonClick={this.onButtonClick}/>\n      <FaceRecognition imgUrl={this.state.imgUrl}/>\n\n    </div>\n\n  );\n}\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}